// Generated by CoffeeScript 1.12.2
(function() {
  var Base, View,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('../core/base').Base;

  View = (function(superClass) {
    extend(View, superClass);

    function View(subject, options) {
      var attrs;
      this.options = options != null ? options : {};
      View.__super__.constructor.call(this);
      this.subject = this.constructor.viewModelClass != null ? (attrs = this.options.settings != null ? {
        settings: this.options.settings,
        subject: subject
      } : {
        subject: subject
      }, new this.constructor.viewModelClass(attrs)) : subject;
      if (typeof this._initialize === "function") {
        this._initialize();
      }
    }

    View.prototype.artifact = function() {
      return this._artifact != null ? this._artifact : this._artifact = this._render();
    };

    View.prototype._render = function() {};

    View.prototype.wireEvents = function() {
      if (!this._wired) {
        this._wireEvents();
      }
      this._wired = true;
      return null;
    };

    View.prototype._wireEvents = function() {};

    View.prototype.attach = function(artifact) {
      this._artifact = artifact;
      this._attach(artifact);
      return null;
    };

    View.prototype._attach = function() {};

    return View;

  })(Base);

  module.exports = {
    View: View
  };

}).call(this);
