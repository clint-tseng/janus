// Generated by CoffeeScript 1.12.2
(function() {
  var attribute, base, collection, kase, resolver, schema, template, util;

  util = require('./util/util');

  kase = require('./core/case');

  template = require('./view/template');

  collection = require('./collection/collection');

  resolver = require('./model/resolver');

  schema = require('./model/schema');

  attribute = schema.attribute;

  util.extend(attribute, require('./model/attribute'));

  module.exports = (base = typeof window !== "undefined" && window !== null ? window : global)._janus$ != null ? base._janus$ : base._janus$ = {
    Varying: require('./core/varying').Varying,
    defcase: kase.defcase,
    match: kase.match,
    otherwise: kase.otherwise,
    from: require('./core/from'),
    Base: require('./core/base').Base,
    Map: require('./collection/map').Map,
    List: require('./collection/list').List,
    Set: require('./collection/set').Set,
    Traversal: require('./collection/traversal').Traversal,
    Enumerable: collection.Enumerable,
    Collection: collection.Collection,
    OrderedCollection: collection.OrderedCollection,
    Model: require('./model/model').Model,
    Trait: schema.Trait,
    attribute: attribute,
    bind: schema.bind,
    issue: schema.issue,
    transient: schema.transient,
    dfault: schema.dfault,
    Request: resolver.Request,
    Resolver: resolver.Resolver,
    MemoryCacheResolver: resolver.MemoryCacheResolver,
    View: require('./view/view').View,
    DomView: require('./view/dom-view').DomView,
    find: template.find,
    template: template.template,
    mutators: require('./view/mutators'),
    application: {
      App: require('./application/app').App,
      Library: require('./application/library').Library,
      Manifest: require('./application/manifest').Manifest
    },
    util: util,
    types: require('./util/types')
  };

}).call(this);
